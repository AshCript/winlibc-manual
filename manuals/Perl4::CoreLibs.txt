.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Perl4::CoreLibs 3pm"
.TH Perl4::CoreLibs 3pm "2022-12-04" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Perl4::CoreLibs \- libraries historically supplied with Perl 4
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a collection of \f(CW\*(C`.pl\*(C'\fR files that were bundled with the Perl
core until core version 5.15.1.  Relying on their presence in the core
distribution is deprecated; they should be acquired from this \s-1CPAN\s0
distribution instead.  From core version 5.13.3 until their removal, the
core versions of these libraries emit a deprecation warning when loaded.
The \s-1CPAN\s0 version does not emit such a warning.
.PP
The entire Perl 4 approach to libraries was largely superseded in Perl
5.000 by the system of module namespaces and \f(CW\*(C`.pm\*(C'\fR files.  Most of
the libraries in this collection predate Perl 5.000, but a handful were
first introduced in that version.  Functionally, most have been directly
superseded by modules in the Perl 5 style.  These libraries should not
be used by new code.  This collection exists to support old Perl programs
that predate satisfactory replacements.
.PP
Most of these libraries have not been substantially maintained in the
course of Perl 5 development.  They are now very antiquated in style,
making no use of the language facilities introduced since Perl 4.
They should therefore not be used as programming examples.
.SH "LIBRARIES"
.IX Header "LIBRARIES"
The libraries in this collection are:
.IP "abbrev.pl" 4
.IX Item "abbrev.pl"
Build a dictionary of unambiguous abbreviations for a group of words.
Prefer Text::Abbrev.
.IP "assert.pl" 4
.IX Item "assert.pl"
Assertion checking with stack trace upon assertion failure.
.IP "bigfloat.pl" 4
.IX Item "bigfloat.pl"
Arbitrary precision decimal floating point arithmetic.
Prefer Math::BigFloat.
.IP "bigint.pl" 4
.IX Item "bigint.pl"
Arbitrary precision integer arithmetic.
Prefer Math::BigInt.
.IP "bigrat.pl" 4
.IX Item "bigrat.pl"
Arbitrary precision rational arithmetic.
Prefer Math::BigRat.
.IP "cacheout.pl" 4
.IX Item "cacheout.pl"
Manage output to a large number of files to avoid running out of file
descriptors.
.IP "chat2.pl" 4
.IX Item "chat2.pl"
Framework for partial automation of communication with a remote process
over \s-1IP.\s0
Prefer IO::Socket::INET.
.IP "complete.pl" 4
.IX Item "complete.pl"
Interactive line input with word completion.
Prefer Term::Complete.
.IP "ctime.pl" 4
.IX Item "ctime.pl"
One form of textual representation of time.
Prefer \f(CW\*(C`scalar(localtime())\*(C'\fR or \*(L"ctime\*(R" in \s-1POSIX\s0.
.IP "dotsh.pl" 4
.IX Item "dotsh.pl"
Inhale shell variables set by a shell script.
.IP "exceptions.pl" 4
.IX Item "exceptions.pl"
String-based exception handling built on \f(CW\*(C`eval\*(C'\fR and \f(CW\*(C`die\*(C'\fR.
Prefer Try::Tiny or TryCatch.
.IP "fastcwd.pl" 4
.IX Item "fastcwd.pl"
Determine current directory.
Prefer Cwd.
.IP "find.pl" 4
.IX Item "find.pl"
Historical interface for a way of searching for files.
Prefer File::Find.
.IP "finddepth.pl" 4
.IX Item "finddepth.pl"
Historical interface for a way of searching for files.
Prefer File::Find.
.IP "flush.pl" 4
.IX Item "flush.pl"
Flush an I/O handle's output buffer.
Prefer \*(L"flush\*(R" in IO::Handle.
.IP "ftp.pl" 4
.IX Item "ftp.pl"
File Transfer Protocol (\s-1FTP\s0) over \s-1IP.\s0
Prefer Net::FTP.
.IP "getcwd.pl" 4
.IX Item "getcwd.pl"
Determine current directory.
Prefer Cwd.
.IP "getopt.pl" 4
.IX Item "getopt.pl"
Unix-like option processing with all option taking arguments.
Prefer Getopt::Std.
.IP "getopts.pl" 4
.IX Item "getopts.pl"
Full Unix-like option processing.
Prefer Getopt::Std.
.IP "hostname.pl" 4
.IX Item "hostname.pl"
Determine host's hostname.
Prefer Sys::Hostname.
.IP "importenv.pl" 4
.IX Item "importenv.pl"
Import environment variables as Perl package variables.
.IP "look.pl" 4
.IX Item "look.pl"
Data-based seek within regular file.
.IP "newgetopt.pl" 4
.IX Item "newgetopt.pl"
GNU-like option processing.
Prefer Getopt::Long.
.IP "open2.pl" 4
.IX Item "open2.pl"
Open a subprocess for both reading and writing.
Prefer IPC::Open2.
.IP "open3.pl" 4
.IX Item "open3.pl"
Open a subprocess for reading, writing, and error handling.
Prefer IPC::Open3.
.IP "pwd.pl" 4
.IX Item "pwd.pl"
Track changes of current directory in \f(CW$ENV{PWD}\fR.
.IP "shellwords.pl" 4
.IX Item "shellwords.pl"
Interpret shell quoting.
Prefer Text::ParseWords.
.IP "stat.pl" 4
.IX Item "stat.pl"
Access fields of a stat structure by name.
Prefer File::stat.
.IP "syslog.pl" 4
.IX Item "syslog.pl"
Write to Unix system log.
Prefer Sys::Syslog.
.IP "tainted.pl" 4
.IX Item "tainted.pl"
Determine whether data is tainted.
Prefer Taint::Util.
.IP "termcap.pl" 4
.IX Item "termcap.pl"
Generate escape sequences to control arbitrary terminal.
Prefer Term::Cap.
.IP "timelocal.pl" 4
.IX Item "timelocal.pl"
Generate time number from broken-down time.
Prefer Time::Local.
.IP "validate.pl" 4
.IX Item "validate.pl"
Check permissions on a group of files.
.SH "AUTHOR"
.IX Header "AUTHOR"
Known contributing authors for the libraries in this package are
Brandon S. Allbery, John Bazik, Tom Christiansen <tchrist@convex.com>,
Charles Collins, Joe Doupnik <JRD@CC.USU.EDU>, Marion Hakanson
<hakanson@cse.ogi.edu>, Waldemar Kebsch <kebsch.pad@nixpbe.UUCP>,
Lee McLoughlin <lmjm@doc.ic.ac.uk>, <A.Macpherson@bnr.co.uk>, Randal
L. Schwartz <merlyn@stonehenge.com>, Aaron Sherman <asherman@fmrco.com>,
Wayne Thompson, Larry Wall <lwall@jpl\-devvax.jpl.nasa.gov>, and Ilya
Zakharevich.  (Most of these email addresses are probably out of date.)
.PP
Known contributing authors for the tests in this package are Tom
Christiansen <tchrist@convex.com>, Alexandr Ciornii (alexchorny at
gmail.com), Marc Horowitz <marc@mit.edu>, Dave Rolsky <autarch@urth.org>,
and David Sundstrom <sunds@asictest.sc.ti.com>.
.PP
Andrew Main (Zefram) <zefram@fysh.org> built the Perl4::CoreLibs package.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 1987\-2009 Larry Wall et al
.PP
Copyright (C) 2010, 2011, 2017 Andrew Main (Zefram) <zefram@fysh.org>
.SH "LICENSE"
.IX Header "LICENSE"
This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
