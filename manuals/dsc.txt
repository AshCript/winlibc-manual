.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dsc 5"
.TH dsc 5 "2023-05-11" "1.21.22" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dsc \- Debian source packages' control file format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIfilename\fR\fB.dsc\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Each Debian source package is composed of a .dsc control file, which
contains a number of fields, in \fBdeb822\fR\|(5) format.
.PP
Each field begins with a tag, such as
\&\fBSource\fR
or
\&\fBBinary\fR
(case insensitive), followed by a colon, and the body of the field
(case sensitive unless stated otherwise).
Fields are delimited only by field tags.
In other words, field text may be multiple lines in length, but the
installation tools will generally join lines when processing the body
of the field (except in case of the multiline fields
\&\fBPackage-List\fR, \fBFiles\fR, \fBChecksums\-Sha1\fR and \fBChecksums\-Sha256\fR,
see below).
.PP
The control data might be enclosed in an OpenPGP \s-1ASCII\s0 Armored signature,
as specified in \s-1RFC4880.\s0
.SH "FIELDS"
.IX Header "FIELDS"
.IP "\fBFormat:\fR \fIformat-version\fR (required)" 4
.IX Item "Format: format-version (required)"
The value of this field declares the format version of the source package.
The field value is used by programs acting on a source package to
interpret the list of files in the source package and determine how
to unpack it.
The syntax of the field value is a numeric major revision (\(lq0\-9\(rq), a
period (\(lq.\(rq), a numeric minor revision (\(lq0\-9\(rq), and then an optional
subtype after whitespace (\(lq \et\(rq), which if specified is a lowercase
alphanumeric (\(lqa\-z0\-9\(rq) word in parentheses (\(lq()\(rq).
The subtype is optional in the syntax but may be mandatory for particular
source format revisions.
.Sp
The source formats currently supported by \fBdpkg\fR are \fB1.0\fR,
\&\fB2.0\fR, \fB3.0 (native)\fR, \fB3.0 (quilt)\fR, \fB3.0 (git)\fR,
\&\fB3.0 (bzr)\fR and \fB3.0 (custom)\fR.
See \fBdpkg-source\fR(1) for their description.
.IP "\fBSource:\fR \fIsource-name\fR (required)" 4
.IX Item "Source: source-name (required)"
The value of this field determines the package name, and is used to
generate file names by most installation tools.
.IP "\fBBinary:\fR \fIbinary-package-list\fR" 4
.IX Item "Binary: binary-package-list"
This folded field lists binary packages which this source package can produce,
separated by commas.
.Sp
This field has now been superseded by the \fBPackage-List\fR field, which
gives enough information about what binary packages are produced on which
architecture, build-profile and other involved restrictions.
.IP "\fBArchitecture:\fR \fIarch-list\fR (recommended)" 4
.IX Item "Architecture: arch-list (recommended)"
A list of architectures and architecture wildcards separated by spaces
which specify the type of hardware this package can be compiled for.
Common architecture names and architecture wildcards are \fBamd64\fR,
\&\fBarmel\fR, \fBi386\fR, \fBlinux-any\fR, \fBany\-amd64\fR, etc.
.Sp
Note that the \fBall\fR value is meant for packages that are architecture
independent, and \fBany\fR for packages that are architecture dependent.
The list may include (or consist solely of) the special value \fBall\fR.
When the list contains the architecture wildcard \fBany\fR, the only
other value allowed in the list is \fBall\fR.
.Sp
The field value is generally generated from \fBArchitecture\fR fields
from in the \fIdebian/control\fR in the source package.
.IP "\fBVersion:\fR \fIversion-string\fR (required)" 4
.IX Item "Version: version-string (required)"
Typically, this is the original package's version number in whatever form
the program's author uses.
It may also include a Debian revision number (for non-native packages).
The exact format and sorting algorithm are described in
\&\fBdeb-version\fR(7).
.IP "\fBOrigin:\fR \fIname\fR" 4
.IX Item "Origin: name"
The name of the distribution this package is originating from.
.IP "\fBMaintainer:\fR \fIfullname-email\fR (recommended)" 4
.IX Item "Maintainer: fullname-email (recommended)"
Should be in the format \(lqJoe Bloggs <jbloggs@foo.com>\(rq, and is
typically the person who created the package, as opposed to the author
of the software that was packaged.
.IP "\fBUploaders:\fR \fIfullname-email-list\fR" 4
.IX Item "Uploaders: fullname-email-list"
Lists all the names and email addresses of co-maintainers of the package,
in the same format as the \fBMaintainer\fR field.
Multiple co-maintainers should be separated by a comma.
.IP "\fBDescription\fR \fIshort-description\fR" 4
.IX Item "Description short-description"
.PD 0
.IP "Â \fIlong-description\fR" 4
.IX Item " long-description"
.PD
The format for the source package description is a short brief summary on the
first line (after the \fBDescription\fR field).
The following lines should be used as a longer, more detailed description.
Each line of the long description must be preceded by a space, and blank
lines in the long description must contain a single \(oq\fB.\fR\(cq following
the preceding space.
.IP "\fBHomepage:\fR \fIurl\fR" 4
.IX Item "Homepage: url"
The upstream project home page \fIurl\fR.
.IP "\fBStandards-Version:\fR \fIversion-string\fR (recommended)" 4
.IX Item "Standards-Version: version-string (recommended)"
This documents the most recent version of the distribution policy standards
this package complies with.
.IP "\fBVcs-Browser:\fR \fIurl\fR" 4
.IX Item "Vcs-Browser: url"
The \fIurl\fR of a web interface to browse the Version Control System
repository.
.IP "\fBVcs-Arch:\fR \fIurl\fR" 4
.IX Item "Vcs-Arch: url"
.PD 0
.IP "\fBVcs-Bzr:\fR \fIurl\fR" 4
.IX Item "Vcs-Bzr: url"
.IP "\fBVcs-Cvs:\fR \fIurl\fR" 4
.IX Item "Vcs-Cvs: url"
.IP "\fBVcs-Darcs:\fR \fIurl\fR" 4
.IX Item "Vcs-Darcs: url"
.IP "\fBVcs-Git:\fR \fIurl\fR" 4
.IX Item "Vcs-Git: url"
.IP "\fBVcs-Hg:\fR \fIurl\fR" 4
.IX Item "Vcs-Hg: url"
.IP "\fBVcs-Mtn:\fR \fIurl\fR" 4
.IX Item "Vcs-Mtn: url"
.IP "\fBVcs-Svn:\fR \fIurl\fR" 4
.IX Item "Vcs-Svn: url"
.PD
These fields declare the \fIurl\fR of the Version Control System repository
used to maintain this package.
See \fBdeb-src-control\fR(5) for more details.
.IP "\fBTestsuite:\fR \fIname-list\fR" 4
.IX Item "Testsuite: name-list"
This field declares that the source package contains the specified test suites.
The value is a comma-separated list of test suites.
If the \fBautopkgtest\fR value is present, a \fIdebian/tests/control\fR is
expected to be present, if the file is present but not the value, then
\&\fBdpkg-source\fR will automatically add it, preserving previous values.
.IP "\fBTestsuite-Triggers:\fR \fIpackage-list\fR" 4
.IX Item "Testsuite-Triggers: package-list"
This field declares the comma-separated union of all test dependencies
(\fBDepends\fR fields in \fIdebian/tests/control\fR file), with all
restrictions removed, and \s-1OR\s0 dependencies flattened (that is, converted to
separate \s-1AND\s0 relationships), except for binaries generated by this source
package and its meta-dependency equivalent \fB@\fR.
.Sp
Rationale: this field is needed because otherwise to be able to get the
test dependencies, each source package would need to be unpacked.
.IP "\fBBuild-Depends:\fR \fIpackage-list\fR" 4
.IX Item "Build-Depends: package-list"
.PD 0
.IP "\fBBuild-Depends-Arch:\fR \fIpackage-list\fR" 4
.IX Item "Build-Depends-Arch: package-list"
.IP "\fBBuild-Depends-Indep:\fR \fIpackage-list\fR" 4
.IX Item "Build-Depends-Indep: package-list"
.IP "\fBBuild-Conflicts:\fR \fIpackage-list\fR" 4
.IX Item "Build-Conflicts: package-list"
.IP "\fBBuild-Conflicts-Arch:\fR \fIpackage-list\fR" 4
.IX Item "Build-Conflicts-Arch: package-list"
.IP "\fBBuild-Conflicts-Indep:\fR \fIpackage-list\fR" 4
.IX Item "Build-Conflicts-Indep: package-list"
.PD
These fields declare relationships between the source package and packages
used to build it.
They are discussed in the \fBdeb-src-control\fR(5) manpage.
.IP "\fBPackage-List:\fR" 4
.IX Item "Package-List:"
.PD 0
.IP "Â \fIpackage\fR \fIpackage-type\fR \fIsection\fR \fIpriority\fR \fIkey-value-list\fR" 4
.IX Item " package package-type section priority key-value-list"
.PD
This multiline field contains a list of binary packages generated by this
source package.
.Sp
The \fIpackage\fR is the binary package name.
.Sp
The \fIpackage-type\fR is the binary package type, usually \fBdeb\fR, another
common value is \fBudeb\fR.
.Sp
The \fIsection\fR and \fIpriority\fR match the binary package fields of the
same name.
.Sp
The \fIkey-value-list\fR is a space separated \fIkey\fR\fB=\fR\fIvalue\fR list,
and the currently known optional keys are:
.RS 4
.IP "\fBarch\fR" 4
.IX Item "arch"
The architecture restriction from the binary package \fBArchitecture\fR
field, with spaces converted to \(oq,\(cq.
.IP "\fBprofile\fR" 4
.IX Item "profile"
The normalized build-profile restriction formula from the binary package
\&\fBBuild-Profile\fR field, with ORs converted to \(oq+\(cq and ANDs to
\(oq,\(cq.
.IP "\fBprotected\fR" 4
.IX Item "protected"
If the binary package is protected, this key will contain the value of the
\&\fBProtected\fR field, that is a \fByes\fR value.
.Sp
Supported since dpkg 1.20.1.
.IP "\fBessential\fR" 4
.IX Item "essential"
If the binary package is essential, this key will contain the value of the
\&\fBEssential\fR field, that is a \fByes\fR value.
.RE
.RS 4
.RE
.IP "\fBFiles:\fR (required)" 4
.IX Item "Files: (required)"
.PD 0
.IP "\fBChecksums\-Sha1:\fR (required)" 4
.IX Item "Checksums-Sha1: (required)"
.IP "\fBChecksums\-Sha256:\fR (required)" 4
.IX Item "Checksums-Sha256: (required)"
.IP "Â \fIchecksum\fR \fIsize\fR \fIfilename\fR" 4
.IX Item " checksum size filename"
.PD
These multiline fields contain a list of files with a checksum and size
for each one.
These fields have the same syntax and differ only in the checksum algorithm
used: \s-1MD5\s0 for \fBFiles\fR, \s-1SHA\-1\s0 for \fBChecksums\-Sha1\fR and \s-1SHA\-256\s0 for
\&\fBChecksums\-Sha256\fR.
.Sp
The first line of the field value (the part on the same line as the field
name followed by a colon) is always empty.
The content of the field is expressed as continuation lines, one line per file.
Each line consists of the checksum, a space, the file size, a space, and the
file name.
.Sp
These fields list all files that make up the source package.
The list of files in these fields must match the list of files in the
other related fields.
.SH "BUGS"
.IX Header "BUGS"
The \fBFormat\fR field conflates the format for the \fB.dsc\fR file itself
and the format of the extracted source package.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdeb822\fR\|(5),
\&\fBdeb-src-control\fR(5),
\&\fBdeb-version\fR(7),
\&\fBdpkg-source\fR(1).
