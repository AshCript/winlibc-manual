.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-origin 5"
.TH deb-origin 5 "2023-05-11" "1.21.22" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
deb\-origin \- Vendor\-specific information files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB/etc/dpkg/origins/\fR\fIfilename\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The files in \fB/etc/dpkg/origins\fR can provide information about
various vendors who are providing Debian packages.
.PP
They contain a number of fields, or comments when the line starts with
\(oq\fB#\fR\(cq.
Each field begins with a tag, such as \fBVendor\fR or \fBParent\fR,
followed by a colon and the body of the field. Fields are delimited
only by field tags. In other words, field text may be multiple lines
in length, but the tools will join lines when processing the body of
the field.
.PP
The file should be named according to the vendor name.
The usual convention is to name the vendor file using the vendor name
in all lowercase, but some variation is permitted.
.PP
Namely (since dpkg 1.21.10), first, non-alphanumeric characters
(\(oq\fB[^A\-Za\-z0\-9]\fR\(cq) are mapped to dashes (\(oq\fB\-\fR\(cq), then the resulting
name will be tried in sequence by lower-casing it, keeping it as is,
lower-casing then capitalizing it (that is upper-casing the first character),
and only capitalizing it.
.PP
In addition, for historical and backwards compatibility, the name will
be tried keeping it as is without non-alphanumeric characters remapping,
then the resulting name will be tried in sequence by lower-casing it,
keeping it as is, lower-casing then capitalizing it, and only capitalizing it.
And finally the name will be tried by remapping spaces to dashes (\(oq\fB\-\fR\(cq),
then the resulting name will be tried in sequence by lower-casing it,
keeping it as is, lower-casing then capitalizing it, and only capitalizing it.
.PP
But these backwards compatible module lookups will be removed during the
dpkg 1.22.x release cycle.
.SH "FIELDS"
.IX Header "FIELDS"
.IP "\fBVendor:\fR \fIvendor-name\fR (required)" 4
.IX Item "Vendor: vendor-name (required)"
The value of this field determines the vendor name.
.IP "\fBVendor-URL:\fR \fIvendor-url\fR" 4
.IX Item "Vendor-URL: vendor-url"
The value of this field determines the vendor \s-1URL.\s0
.IP "\fBBugs:\fR \fIbug-url\fR" 4
.IX Item "Bugs: bug-url"
The value of this field determines the type and address of the bug
tracking system used by this vendor. It can be a mailto \s-1URL\s0 or a
debbugs \s-1URL\s0 (e.g., debbugs://bugs.debian.org/).
.IP "\fBParent:\fR \fIvendor-name\fR" 4
.IX Item "Parent: vendor-name"
The value of this field determines the vendor name of the vendor that
this vendor derives from.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 3
\& Vendor: Debian
\& Vendor\-URL: https://www.debian.org/
\& Bugs: debbugs://bugs.debian.org
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdpkg-vendor\fR(1)
