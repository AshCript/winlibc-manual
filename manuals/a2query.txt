.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "A2QUERY.IN 1"
.TH A2QUERY.IN 1 "2023-04-13" "perl v5.36.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
a2query \- retrieve runtime configuration from a local Apache 2 HTTP server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBa2query\fR  [\-m [\fI\s-1MODULE\s0\fR]] [\-s [\fI\s-1SITE\s0\fR]] [\-c [\fI\s-1CONF\s0\fR]] [\-a] [\-v]
[\-M] [\-d] [\-h]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBa2query\fR is a program designed to retrieve configuration values from a locally
available Apache 2 \s-1HTTP\s0 web server. It was designed to be as robust as possible
by returning feasible values even if the Apache 2 syntax validator fails.
.PP
This program is primarily meant to be used from maintainer scripts.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-a" 4
.IX Item "-a"
Returns the Apache 2 \*(L"Module Magic Version\*(R" (\s-1API\s0 version) number, the server was
compiled with. The returned version does not contain any minor versions which
are known to be compatible with the major version returned.
.IP "\-c [\fI\s-1CONF\s0\fR]" 4
.IX Item "-c [CONF]"
Checks whether the configuration \fI\s-1CONF\s0\fR is enabled. If no argument was given,
all enabled configuration files are being returned. \fI\s-1CONF\s0\fR is compared by
string comparison by ignoring a leading \*(L"mod_\*(R" prefix and possibly a '.conf' or
\&'.load' suffix.
.IP "\-h" 4
.IX Item "-h"
Displays a brief summary how the program can be called and exits.
.IP "\-m [\fI\s-1MODULE\s0\fR]" 4
.IX Item "-m [MODULE]"
Checks whether the module \fI\s-1MODULE\s0\fR is enabled, The argument is interpreted in
the same way, as for configuration files queried by the \-c switch.
.IP "\-M" 4
.IX Item "-M"
Returns the currently enabled Apache 2 \s-1MPM\s0 (Multi Processing Module).
.IP "\-s [\fI\s-1SITE\s0\fR]" 4
.IX Item "-s [SITE]"
Checks whether the module \fI\s-1SITE\s0\fR is enabled, The argument is interpreted in
the same way, as for configuration files queried by the \-c switch.
.IP "\-v" 4
.IX Item "-v"
returns the currently installed Apache 2 \s-1HTTP\s0 server version
.IP "\-q" 4
.IX Item "-q"
suppress any output. This is useful to invoke a2query from another script. This
is useful if only the return code is of interest.
.SH "EXIT CODES"
.IX Header "EXIT CODES"
\&\fBa2query\fR returns with a zero (0) exit status if the requested operation was
effectuated successfully and with a non-zero status otherwise. In case of an
error it leaves with error code 32 if a requested module, site or
configuration was not found and 33 if a module, site or configuration was
disabled by a maintainer script. However, exit status 1 is returned if the
module was not found at all
.SH "SEE ALSO"
.IX Header "SEE ALSO"
apache2ctl(8), apache2(8), perl(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
This manual and a2query was written by Arno Toell <debian@toell.net>.
