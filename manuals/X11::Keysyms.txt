.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Keysyms 3pm"
.TH Keysyms 3pm "2022-10-13" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
X11::Keysyms \- Perl module for names of X11 keysyms
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  use X11::Keysyms \*(Aq%Keysyms\*(Aq, qw(MISCELLANY XKB_KEYS LATIN1);
\&  %Keysyms_name = reverse %Keysyms;
\&  $ks = $Keysyms{\*(AqBackSpace\*(Aq};
\&  $name = $Keysysms_name{$ks};
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module exports a hash mapping the names of X11 keysyms, such
as 'A' or 'Linefeed' or 'Hangul_J_YeorinHieuh', onto the numbers that
represent them. The first argument to 'use' is the name of the variable
the hash should be exported into, and the rest are names of subsets of
the keysysms to export: one or more of
.PP
.Vb 4
\&  \*(AqMISCELLANY\*(Aq, \*(AqXKB_KEYS\*(Aq, \*(Aq3270\*(Aq, \*(AqLATIN1\*(Aq, \*(AqLATIN2\*(Aq,
\&  \*(AqLATIN3\*(Aq, \*(AqLATIN4\*(Aq, \*(AqKATAKANA\*(Aq, \*(AqARABIC\*(Aq, \*(AqCYRILLIC\*(Aq,
\&  \*(AqGREEK\*(Aq, \*(AqTECHNICAL\*(Aq, \*(AqSPECIAL\*(Aq, \*(AqPUBLISHING\*(Aq, \*(AqAPL\*(Aq,
\&  \*(AqHEBREW\*(Aq, \*(AqTHAI\*(Aq, \*(AqKOREAN\*(Aq.
.Ve
.PP
If this list is omitted, the list
.PP
.Vb 2
\&  \*(AqMISCELLANY\*(Aq, \*(AqXKB_KEYS\*(Aq, \*(AqLATIN1\*(Aq, \*(AqLATIN2\*(Aq, \*(AqLATIN3\*(Aq,
\&  \*(AqLATIN4\*(Aq, \*(AqGREEK\*(Aq
.Ve
.PP
is used.
.SH "AUTHOR"
.IX Header "AUTHOR"
This module was generated semi-automatically by Stephen McCamant
(<SMCCAM@cpan.org>) from the header file 'X11/keysymdef.h', distributed by the
X Consortium.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1),
X11::Protocol,
\&\fIX Window System Protocol (X Version 11)\fR.
