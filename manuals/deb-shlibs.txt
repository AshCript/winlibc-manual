.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-shlibs 5"
.TH deb-shlibs 5 "2023-05-11" "1.21.22" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
deb\-shlibs \- Debian shared library information file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdebian/shlibs\fR, \fBdebian/\fR\fIbinary-name\fR\fB.shlibs\fR, \fBDEBIAN/shlibs\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBshlibs\fR
files map shared library names and versions
(\fISONAMEs\fR)
to dependencies suitable for a package control file.  There is one
entry per line. Blank lines are \fBnot\fR allowed.  Lines beginning
with a \fB#\fR character are considered commentary, and are ignored.
All other lines must have the format:
.Sp
.RS 4
[\fItype\fR\fB:\fR]
\&\fIlibrary\fR
\&\fIversion\fR
\&\fIdependencies\fR
.RE
.PP
The \fIlibrary\fR and \fIversion\fR fields are whitespace-delimited,
but the \fIdependencies\fR field extends to the end of the line.  The
\&\fItype\fR field is optional and normally not needed.
.PP
The \fIdependencies\fR field has the same syntax as the \fBDepends\fR
field in a binary control file, see \fBdeb-control\fR(5).
.SH "SONAME FORMATS"
.IX Header "SONAME FORMATS"
The \s-1SONAME\s0 formats supported are:
.Sp
.RS 4
\&\fIname\fR.so.\fIversion\fR
.RE
.PP
and
.Sp
.RS 4
\&\fIname\fR\-\fIversion\fR.so
.RE
.PP
where \fIname\fR is usually prefixed by \fBlib\fR.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The
\&\fBshlibs\fR
file for a typical library package, named
\&\fIlibcrunch1\fR,
that provides one library whose \s-1SONAME\s0 is
\&\fIlibcrunch.so.1\fR,
might read
.Sp
.Vb 1
\& libcrunch 1 libcrunch1 (>= 1.2\-1)
.Ve
.PP
The \fIdependencies\fR
must mention the most recent version of the package that added new
symbols to the library: in the above example, new symbols were added to
version 1.2 of
\&\fIlibcrunch\fR.
This is not the only reason the dependencies might need to be
tightened.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdeb-control\fR(5),
\&\fBdpkg-shlibdeps\fR(1),
\&\fBdeb-symbols\fR(5).
