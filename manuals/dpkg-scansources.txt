.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dpkg-scansources 1"
.TH dpkg-scansources 1 "2023-05-11" "1.21.22" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dpkg\-scansources \- create Sources index files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdpkg-scansources\fR
[\fIoption\fR...] \fIbinary-dir\fR
[\fIoverride-file\fR
[\fIpath-prefix\fR]]
\&\fB>\fR
\&\fISources\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdpkg-scansources\fR scans the given \fIbinary-dir\fR for \fI.dsc\fR files.
These are used to create a Debian source index, which is output to
stdout.
.PP
The \fIoverride-file\fR, if given, is used to set priorities in the resulting
index stanzas and to override the maintainer field given in the \fI.dsc\fR
files.
The file can be compressed (since dpkg 1.15.5).
See
\&\fBdeb-override\fR(5)
for the format of this file.
.PP
\&\fBNote:\fR Since
the override file is indexed by binary, not source packages, there's a bit
of a problem here. The current implementation uses the highest priority of
all the binary packages produced by a \fI.dsc\fR file for the priority of the
source package, and the override entry for the first binary package listed
in the \fI.dsc\fR file to modify maintainer information. This might change.
.PP
The \fIpath-prefix\fR, if given, is prepended to the directory field in the
generated source index. You generally use this to make the directory
fields contain the path from the top of the Debian archive hierarchy.
.PP
\&\fBNote:\fR
If you want to access the generated Sources file with
\&\fBapt\fR(8)
you will probably need to compress the file with
\&\fBgzip\fR(1)
(generating a Sources.gz file).
\&\fBapt\fR(8)
ignores uncompressed Sources files except on local access (i.e.
\&\fBfile://\fR
sources).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-n\fR, \fB\-\-no\-sort\fR" 4
.IX Item "-n, --no-sort"
Do not sort the index stanzas.
Normally they are sorted by source package name.
.IP "\fB\-e\fR, \fB\-\-extra\-override\fR \fIfile\fR" 4
.IX Item "-e, --extra-override file"
Scan \fIfile\fR to find supplementary overrides (since dpkg 1.15.4;
the file can be compressed since dpkg 1.15.5).
See
\&\fBdeb-extra-override\fR(5)
for more information on its format.
.IP "\fB\-s\fR, \fB\-\-source\-override\fR \fIfile\fR" 4
.IX Item "-s, --source-override file"
Use \fIfile\fR as the source override file (the file can be compressed
since dpkg 1.15.5).
The default is the name of the override file you specified with \fI.src\fR
appended.
.Sp
The source override file is in a different format from the binary override
file. It contains only two whitespace separated fields, the first is the
source package name and the second is the section. Blank lines and comment
lines are ignored in the normal manner. If a package appears in both files
the source override takes precedence for setting the section.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Turn debugging on.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Show the usage message and exit.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Show the version and exit.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\fB\s-1DPKG_COLORS\s0\fR" 4
.IX Item "DPKG_COLORS"
Sets the color mode (since dpkg 1.18.5).
The currently accepted values are: \fBauto\fR (default), \fBalways\fR and
\&\fBnever\fR.
.IP "\fB\s-1DPKG_NLS\s0\fR" 4
.IX Item "DPKG_NLS"
If set, it will be used to decide whether to activate Native Language Support,
also known as internationalization (or i18n) support (since dpkg 1.19.0).
The accepted values are: \fB0\fR and \fB1\fR (default).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdeb-override\fR(5),
\&\fBdeb-extra-override\fR(5),
\&\fBdpkg-scanpackages\fR(1).
