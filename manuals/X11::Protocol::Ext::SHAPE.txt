.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Protocol::Ext::SHAPE 3pm"
.TH Protocol::Ext::SHAPE 3pm "2022-10-13" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
X11::Protocol::Ext::SHAPE \- Perl module for the X11 Protocol Nonrectangular Window Shape Extension
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use X11::Protocol;
\&  $x = X11::Protocol\->new($ENV{\*(AqDISPLAY\*(Aq});
\&  $x\->init_extension(\*(AqSHAPE\*(Aq) or die;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is used by the X11::Protocol module to participate in the
shaped window extension to the X protocol, allowing windows to be of any
shape, not just rectangles.
.SH "SYMBOLIC CONSTANTS"
.IX Header "SYMBOLIC CONSTANTS"
This extension adds the constant types 'ShapeKind' and 'ShapeOp', with values
as defined in the standard.
.SH "EVENTS"
.IX Header "EVENTS"
This extension adds the event type 'ShapeNotify', with values as specified in
the standard. This event is selected using the \fBShapeSelectInput()\fR request.
.SH "REQUESTS"
.IX Header "REQUESTS"
This extension adds several requests, called as shown below:
.PP
.Vb 3
\&  $x\->ShapeQueryVersion
\&  =>
\&  ($major, $minor)
\&
\&  $x\->ShapeRectangles($dest, $destKind, $op, $xOff, $yOff,
\&                      $ordering, @rectangles) 
\&
\&  $x\->ShapeMask($dest, $destKind, $op, $xOff, $yOff, $source)
\&
\&  $x\->ShapeCombine($dest, $destKind, $op, $xOff, $yOff, $source,
\&                   $sourceKind)
\&
\&  $x\->ShapeOffset($dest, $destKind, $xOff, $yOff)
\&
\&  $x\->ShapeQueryExtents($dest)
\&  =>
\&  ($boundingShaped, $clipShaped,
\&   ($xBoundingShape, $yBoundingShape,
\&    $widthBoundingShape, $heightBoundingShape)  
\&   ($xClipShape, $yClipShape, $widthClipShape, $heightClipShape))
\&
\&  $x\->ShapeSelectInput($window, $enable)  
\&
\&  $x\->ShapeInputSelected($window)
\&  =>
\&  $enable
\&
\&  $x\->ShapeGetRectangles($window, $kind)
\&  =>
\&  ($ordering, [$x, $y, $width, $height], ...)
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Stephen McCamant <SMCCAM@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1), 
X11::Protocol,
\&\fINonrectangular Window Shape Extension (X Consortium Standard)\fR.
