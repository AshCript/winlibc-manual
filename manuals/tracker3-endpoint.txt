'\" t
.\"     Title: tracker3-endpoint
.\"    Author: The Tracker developers
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 12/06/2022
.\"    Manual: Tracker manual
.\"    Source: \ \& 3.4.2
.\"  Language: English
.\"
.TH "TRACKER3\-ENDPOINT" "1" "12/06/2022" "\ \& 3\&.4\&.2" "Tracker manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
tracker3-endpoint \- Create a SPARQL endpoint
.SH "SYNOPSIS"
.sp
.nf
tracker3 endpoint [\-\-dbus\-service | \-b] <service_name>
                  [\-\-database\-path | \-d] <database_path>
                  [[\-\-ontology | \-o] <ontology_name> |
                   [\-\-ontology\-path | \-p] <ontology_path>]
                  [\-\-http\-port] <port>
                  [\-\-loopback]
                  [[\-\-system | \-\-session]]
.fi
.SH "DESCRIPTION"
.sp
This command allows creating SPARQL endpoints\&. The endpoint will be able to handle SPARQL select and update queries, and notify about changes in it\&.
.sp
The endpoint is exported via DBus, accessible through the given \fIservice_name\fR, either using it in a \fBSERVICE\fR clause, or by creating a dedicated bus\-based SPARQL connection\&.
.sp
When creating a database, the \fIontology_name\fR (or alternatively, a \fIontology_path\fR) must be provided in order to generate the database\&. If \fIontology_name\fR is used, the ontology must exist in \fI$datadir/tracker/ontologies\fR
.sp
Users should be careful about the \-\-http\-port option, consider using it only combined with the \-\-loopback option\&.
.sp
The database itself will be stored according to \fIdatabase_path\fR\&.
.SH "OPTIONS"
.PP
\fB\-b, \-\-dbus\-service=<\fR\fB\fIservice_name\fR\fR\fB>\fR
.RS 4
Service name to use on the endpoint\&.
.RE
.PP
\fB\-d, \-\-database\-path=<\fR\fB\fIdatabase_path\fR\fR\fB>\fR
.RS 4
The path where the database will be stored\&.
.RE
.PP
\fB\-o, \-\-ontology\fR
.RS 4
The name of an ontology in
\fI$datadir/tracker/ontologies\fR
to use on the constructed database\&.
.RE
.PP
\fB\-p, \-\-ontology\-path\fR
.RS 4
Full path to an ontology to use on the constructed database\&.
.RE
.PP
\fB\-\-session\fR
.RS 4
Use the session bus\&. This is the default\&.
.RE
.PP
\fB\-\-system\fR
.RS 4
Use the system bus\&.
.RE
.PP
\fB\-l, \-\-list\fR
.RS 4
List all SPARQL endpoints available in DBus
.RE
.PP
\fB\-\-http\-port\fR
.RS 4
Creates a HTTP endpoint that listens in the specified port
.RE
.PP
\fB\-\-loopback\fR
.RS 4
Allows only HTTP connections in the loopback device\&. Only effective with HTTP endpoints\&.
.RE
.SH "EXAMPLES"
.sp
Export a Nepomuk endpoint with the \fIorg\&.example\&.Example1\fR bus name\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ tracker3 endpoint \-b org\&.example\&.Example1 \-o nepomuk \-d /tmp/example1
.fi
.if n \{\
.RE
.\}
.sp
Access this endpoint with the \fBtracker3\-sparql(1)\fR subcommand\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ tracker3 sparql \-\-dbus\-service org\&.example\&.Example1 \-q "
  SELECT ?s ?o
  WHERE {
    ?u a ?o
  }"
.fi
.if n \{\
.RE
.\}
.sp
Export a Nepomuk endpoint via HTTP\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ tracker3 endpoint \-\-http\-port 8080 \-o nepomuk \-\-loopback
.fi
.if n \{\
.RE
.\}
.sp
Access this endpoint via HTTP\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ tracker3 sparql \-\-remote\-service http://127\&.0\&.0\&.1:8080/sparql \-q "
  SELECT ?u {
    ?u a rdfs:Resource
  }"
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
\fBtracker3\-sparql\fR(1),
.sp
https://www\&.w3\&.org/TR/sparql11\-query/
