.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb 5"
.TH deb 5 "2023-05-11" "1.21.22" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
deb \- Debian binary package format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIfilename\fR\fB.deb\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The
\&\fB.deb\fR
format is the Debian binary package file format. It is understood
since dpkg 0.93.76, and is generated by default since dpkg 1.2.0 and
1.1.1elf (i386/ELF builds).
.PP
The format described here is used since Debian 0.93; details of the
old format are described in
\&\fBdeb-old\fR(5).
.SH "FORMAT"
.IX Header "FORMAT"
The file is an
\&\fBar\fR
archive with a magic value of
\&\fB!<arch>\fR.
Only the common \fBar\fR archive format is supported, with no long file
name extensions, but with file names containing an optional trailing
slash, which limits their length to 15 characters (from the 16 allowed).
File sizes are limited to 10 \s-1ASCII\s0 decimal digits, allowing for up to
approximately 9536.74 MiB member files.
.PP
The \fBtar\fR archives currently allowed are, the old-style (v7) format,
the pre-POSIX ustar format, a subset of the \s-1GNU\s0 format (new style long
pathnames and long linknames, supported since dpkg 1.4.1.17; large file
metadata since dpkg 1.18.24),
and the \s-1POSIX\s0 ustar format (long names supported since dpkg 1.15.0).
Unrecognized tar typeflags are considered an error.
Each tar entry size inside a tar archive is limited to 11 \s-1ASCII\s0 octal
digits, allowing for up to 8 GiB tar entries.
The \s-1GNU\s0 large file metadata support permits 95\-bit tar entry sizes and
negative timestamps, and 63\-bit \s-1UID, GID\s0 and device numbers.
.PP
The first member is named
\&\fBdebian-binary\fR
and contains a series of lines, separated by newlines. Currently only
one line is present, the format version number,
\&\fB2.0\fR
at the time this manual page was written.
Programs which read new-format archives should be prepared for the
minor number to be increased and new lines to be present, and should
ignore these if this is the case.
.PP
If the major number has changed, an incompatible change has been made
and the program should stop. If it has not, then the program should
be able to safely continue, unless it encounters an unexpected member
in the archive (except at the end), as described below.
.PP
The second required member is named
\&\fBcontrol.tar\fR.
It is a tar archive containing the package control information, either
not compressed (supported since dpkg 1.17.6), or compressed with
gzip (with \fB.gz\fR extension) or
xz (with \fB.xz\fR extension, supported since 1.17.6),
zstd (with \fB.zst\fR extension, supported since dpkg 1.21.18),
as a series of plain files, of which the file
\&\fBcontrol\fR
is mandatory and contains the core control information, the
\&\fBmd5sums\fR,
\&\fBconffiles\fR, \fBtriggers\fR, \fBshlibs\fR
and
\&\fBsymbols\fR
files contain optional control information, and the
\&\fBpreinst\fR, \fBpostinst\fR, \fBprerm\fR
and
\&\fBpostrm\fR
files are optional maintainer scripts.
The control tarball may optionally contain an entry for
\(oq\fB.\fR\(cq,
the current directory.
.PP
The third, last required member is named
\&\fBdata.tar\fR.
It contains the filesystem as a tar archive, either
not compressed (supported since dpkg 1.10.24), or compressed with
gzip (with \fB.gz\fR extension),
xz (with \fB.xz\fR extension, supported since dpkg 1.15.6),
zstd (with \fB.zst\fR extension, supported since dpkg 1.21.18),
bzip2 (with \fB.bz2\fR extension, supported since dpkg 1.10.24) or
lzma (with \fB.lzma\fR extension, supported since dpkg 1.13.25).
.PP
These members must occur in this exact order. Current implementations
should ignore any additional members after
\&\fBdata.tar\fR.
Further members may be defined in the future, and (if possible) will be
placed after these three. Any additional members that may need to be
inserted after
\&\fBdebian-binary\fR
and before
\&\fBcontrol.tar\fR
or
\&\fBdata.tar\fR
and which should be safely ignored by older programs, will have names
starting with an underscore,
\(oq\fB_\fR\(cq.
.PP
Those new members which won't be able to be safely ignored will be
inserted before
\&\fBdata.tar\fR
with names starting with something other than underscores, or will
(more likely) cause the major version number to be increased.
.SH "MEDIA TYPE"
.IX Header "MEDIA TYPE"
.SS "Current"
.IX Subsection "Current"
application/vnd.debian.binary\-package
.SS "Deprecated"
.IX Subsection "Deprecated"
application/x\-debian\-package
.PP
application/x\-deb
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdeb-old\fR(5),
\&\fBdpkg-deb\fR(1),
\&\fBdeb-control\fR(5),
\&\fBdeb-conffiles\fR(5),
\&\fBdeb\-md5sums\fR(5),
\&\fBdeb-triggers\fR(5),
\&\fBdeb-shlibs\fR(5),
\&\fBdeb-symbols\fR(5),
\&\fBdeb-preinst\fR(5),
\&\fBdeb-postinst\fR(5),
\&\fBdeb-prerm\fR(5),
\&\fBdeb-postrm\fR(5).
