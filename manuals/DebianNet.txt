.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DebianNet 3pm"
.TH DebianNet 3pm "2023-02-26" "4.53" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DebianNet \- create, remove, enable or disable entry in /etc/inetd.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can use the functions in \fBDebianNet\fR to to add, remove, enable or
disable entries in the \fI/etc/inetd.conf\fR file. After the \fI/etc/inetd.conf\fR
file has been changed, a \fB\s-1SIGHUP\s0\fR signal will be sent to the inetd
process to make sure that inetd will use the new \fI/etc/inetd.conf\fR file.
The functions can also be used to add entries that are commented out by
default. They will be treated like normal entries. That also means that
if you already have an entry that is commented out you can't add an entry
for the same service without removing the old one first.
.PP
The \fBDebianNet\fR functions treat entries that are commented out by a
single '\fB#\fR' character as entries that have been commented out by a
user. It will not change such entries.
.PP
For shell scripts you can also use the \fBupdate-inetd\fR command. See
\&\fBupdate\-inetd\fR\|(8) for further information.
.SH "VARIABLES"
.IX Header "VARIABLES"
.ie n .IP "$DebianNet::INETD_CONF" 4
.el .IP "\f(CW$DebianNet::INETD_CONF\fR" 4
.IX Item "$DebianNet::INETD_CONF"
Contains a scalar filename to use as the inetd config file (e.g. for
testing purposes).
.Sp
Defaults to \fI/etc/inetd.conf\fR.
.ie n .IP "$DebianNet::SEP" 4
.el .IP "\f(CW$DebianNet::SEP\fR" 4
.IX Item "$DebianNet::SEP"
Contains the entry comment characters. This is only necessary if you have
to deal with two (or more) services of the same name.
.Sp
Defaults to "\fB#<off># \fR" as the comment characters.
.ie n .IP "$DebianNet::MULTI" 4
.el .IP "\f(CW$DebianNet::MULTI\fR" 4
.IX Item "$DebianNet::MULTI"
Contains a boolean that decides whether to disable/remove more than one
entry at a time. If you try to remove more than one entry at a time without
using this option the program will show a warning and will ask the user
whether to continue.
.Sp
Defaults to false.
.ie n .IP "$DebianNet::VERBOSE" 4
.el .IP "\f(CW$DebianNet::VERBOSE\fR" 4
.IX Item "$DebianNet::VERBOSE"
Contains a boolean to select whether to explain verbosely what is being
done.
.Sp
Defaults to false.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP "$rc = DebianNet::add_service($newentry, $group)" 4
.el .IP "\f(CW$rc\fR = DebianNet::add_service($newentry, \f(CW$group\fR)" 4
.IX Item "$rc = DebianNet::add_service($newentry, $group)"
Add \f(CW$newentry\fR to the group \f(CW$group\fR of the \fI/etc/inetd.conf\fR file. If the
entry already exist it will be enabled (it will also detect entries with
different program options). Using \f(CW$group\fR is optional (the default group
is the group \s-1OTHER\s0). If the group does not exist the entry will be placed
at the end of the file.
.Sp
Returns 1 on success, and \-1 on failure. This function might call \fBexit\fR()
due to debconf prompt answers.
.ie n .IP "$rc = DebianNet::remove_service($entry)" 4
.el .IP "\f(CW$rc\fR = DebianNet::remove_service($entry)" 4
.IX Item "$rc = DebianNet::remove_service($entry)"
Remove \f(CW$entry\fR from \fI/etc/inetd.conf\fR. You can use a regular expression
to remove the entry.
.Sp
Returns 1 on success, and \-1 on failure.
.ie n .IP "$rc = DebianNet::disable_service($service, $pattern)" 4
.el .IP "\f(CW$rc\fR = DebianNet::disable_service($service, \f(CW$pattern\fR)" 4
.IX Item "$rc = DebianNet::disable_service($service, $pattern)"
Disable \f(CW$service\fR (e.g. "\fIftp\fR") in \fI/etc/inetd.conf\fR. Using \f(CW$pattern\fR is
optional (see \fBenable_service()\fR).
.Sp
Returns 1 on success, and \-1 on failure.
.ie n .IP "$rc = DebianNet::enable_service($service, $pattern)" 4
.el .IP "\f(CW$rc\fR = DebianNet::enable_service($service, \f(CW$pattern\fR)" 4
.IX Item "$rc = DebianNet::enable_service($service, $pattern)"
Enable \f(CW$service\fR (e.g. "\fIftp\fR") in \fI/etc/inetd.conf\fR. Using \f(CW$pattern\fR is
optional. It can be used to select a service. You only need this option
if you have two (or more) services of the same name.
.Sp
An example: you have three \fIftp\fR entries in the \fI/etc/inetd.conf\fR file
(all disabled by default) and you want to enable the entry which uses the
\&\fIvsftpd\fR daemon. To do this, use the pattern "\fIvsftpd\fR" (or any other
regular expression that matches this entry).
.Sp
Returns 1 on success, and \-1 on failure.
.SH "CHANGES"
.IX Header "CHANGES"
.SS "Version 1.13"
.IX Subsection "Version 1.13"
New variables: \f(CW$VERSION\fR, \f(CW$VERBOSE\fR, \f(CW$MULTI\fR, \f(CW$SEP\fR, \f(CW$INETD_CONF\fR.
.PP
Deprecated variables: \f(CW$version\fR, \f(CW$verbose\fR, \f(CW$multi\fR, \f(CW$sep\fR, \f(CW$inetdcf\fR.
